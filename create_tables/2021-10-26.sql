/*
 Navicat Premium Data Transfer

 Source Server         : 192.168.1.218
 Source Server Type    : MySQL
 Source Server Version : 50729
 Source Host           : 192.168.1.218:3306
 Source Schema         : ep

 Target Server Type    : MySQL
 Target Server Version : 50729
 File Encoding         : 65001

 Date: 03/11/2021 09:43:51
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for auth_group
-- ----------------------------
DROP TABLE IF EXISTS `auth_group`;
CREATE TABLE `auth_group`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(150) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `name`(`name`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for auth_group_permissions
-- ----------------------------
DROP TABLE IF EXISTS `auth_group_permissions`;
CREATE TABLE `auth_group_permissions`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `auth_group_permissions_group_id_permission_id_0cd325b0_uniq`(`group_id`, `permission_id`) USING BTREE,
  INDEX `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm`(`permission_id`) USING BTREE,
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for auth_permission
-- ----------------------------
DROP TABLE IF EXISTS `auth_permission`;
CREATE TABLE `auth_permission`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `auth_permission_content_type_id_codename_01ab375a_uniq`(`content_type_id`, `codename`) USING BTREE,
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 121 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of auth_permission
-- ----------------------------
INSERT INTO `auth_permission` VALUES (1, 'Can add log entry', 1, 'add_logentry');
INSERT INTO `auth_permission` VALUES (2, 'Can change log entry', 1, 'change_logentry');
INSERT INTO `auth_permission` VALUES (3, 'Can delete log entry', 1, 'delete_logentry');
INSERT INTO `auth_permission` VALUES (4, 'Can view log entry', 1, 'view_logentry');
INSERT INTO `auth_permission` VALUES (5, 'Can add permission', 2, 'add_permission');
INSERT INTO `auth_permission` VALUES (6, 'Can change permission', 2, 'change_permission');
INSERT INTO `auth_permission` VALUES (7, 'Can delete permission', 2, 'delete_permission');
INSERT INTO `auth_permission` VALUES (8, 'Can view permission', 2, 'view_permission');
INSERT INTO `auth_permission` VALUES (9, 'Can add group', 3, 'add_group');
INSERT INTO `auth_permission` VALUES (10, 'Can change group', 3, 'change_group');
INSERT INTO `auth_permission` VALUES (11, 'Can delete group', 3, 'delete_group');
INSERT INTO `auth_permission` VALUES (12, 'Can view group', 3, 'view_group');
INSERT INTO `auth_permission` VALUES (13, 'Can add content type', 4, 'add_contenttype');
INSERT INTO `auth_permission` VALUES (14, 'Can change content type', 4, 'change_contenttype');
INSERT INTO `auth_permission` VALUES (15, 'Can delete content type', 4, 'delete_contenttype');
INSERT INTO `auth_permission` VALUES (16, 'Can view content type', 4, 'view_contenttype');
INSERT INTO `auth_permission` VALUES (17, 'Can add session', 5, 'add_session');
INSERT INTO `auth_permission` VALUES (18, 'Can change session', 5, 'change_session');
INSERT INTO `auth_permission` VALUES (19, 'Can delete session', 5, 'delete_session');
INSERT INTO `auth_permission` VALUES (20, 'Can view session', 5, 'view_session');
INSERT INTO `auth_permission` VALUES (21, 'Can add django job', 6, 'add_djangojob');
INSERT INTO `auth_permission` VALUES (22, 'Can change django job', 6, 'change_djangojob');
INSERT INTO `auth_permission` VALUES (23, 'Can delete django job', 6, 'delete_djangojob');
INSERT INTO `auth_permission` VALUES (24, 'Can view django job', 6, 'view_djangojob');
INSERT INTO `auth_permission` VALUES (25, 'Can add django job execution', 7, 'add_djangojobexecution');
INSERT INTO `auth_permission` VALUES (26, 'Can change django job execution', 7, 'change_djangojobexecution');
INSERT INTO `auth_permission` VALUES (27, 'Can delete django job execution', 7, 'delete_djangojobexecution');
INSERT INTO `auth_permission` VALUES (28, 'Can view django job execution', 7, 'view_djangojobexecution');
INSERT INTO `auth_permission` VALUES (29, 'Can add CRUD event', 8, 'add_crudevent');
INSERT INTO `auth_permission` VALUES (30, 'Can change CRUD event', 8, 'change_crudevent');
INSERT INTO `auth_permission` VALUES (31, 'Can delete CRUD event', 8, 'delete_crudevent');
INSERT INTO `auth_permission` VALUES (32, 'Can view CRUD event', 8, 'view_crudevent');
INSERT INTO `auth_permission` VALUES (33, 'Can add login event', 9, 'add_loginevent');
INSERT INTO `auth_permission` VALUES (34, 'Can change login event', 9, 'change_loginevent');
INSERT INTO `auth_permission` VALUES (35, 'Can delete login event', 9, 'delete_loginevent');
INSERT INTO `auth_permission` VALUES (36, 'Can view login event', 9, 'view_loginevent');
INSERT INTO `auth_permission` VALUES (37, 'Can add request event', 10, 'add_requestevent');
INSERT INTO `auth_permission` VALUES (38, 'Can change request event', 10, 'change_requestevent');
INSERT INTO `auth_permission` VALUES (39, 'Can delete request event', 10, 'delete_requestevent');
INSERT INTO `auth_permission` VALUES (40, 'Can view request event', 10, 'view_requestevent');
INSERT INTO `auth_permission` VALUES (41, 'Can add 用户', 11, 'add_users');
INSERT INTO `auth_permission` VALUES (42, 'Can change 用户', 11, 'change_users');
INSERT INTO `auth_permission` VALUES (43, 'Can delete 用户', 11, 'delete_users');
INSERT INTO `auth_permission` VALUES (44, 'Can view 用户', 11, 'view_users');
INSERT INTO `auth_permission` VALUES (45, 'Can add 权限', 12, 'add_permissions');
INSERT INTO `auth_permission` VALUES (46, 'Can change 权限', 12, 'change_permissions');
INSERT INTO `auth_permission` VALUES (47, 'Can delete 权限', 12, 'delete_permissions');
INSERT INTO `auth_permission` VALUES (48, 'Can view 权限', 12, 'view_permissions');
INSERT INTO `auth_permission` VALUES (49, 'Can add 角色', 13, 'add_roles');
INSERT INTO `auth_permission` VALUES (50, 'Can change 角色', 13, 'change_roles');
INSERT INTO `auth_permission` VALUES (51, 'Can delete 角色', 13, 'delete_roles');
INSERT INTO `auth_permission` VALUES (52, 'Can view 角色', 13, 'view_roles');
INSERT INTO `auth_permission` VALUES (53, 'Can add 部门', 14, 'add_departments');
INSERT INTO `auth_permission` VALUES (54, 'Can change 部门', 14, 'change_departments');
INSERT INTO `auth_permission` VALUES (55, 'Can delete 部门', 14, 'delete_departments');
INSERT INTO `auth_permission` VALUES (56, 'Can view 部门', 14, 'view_departments');
INSERT INTO `auth_permission` VALUES (57, 'Can add 错误日志', 15, 'add_errorlogs');
INSERT INTO `auth_permission` VALUES (58, 'Can change 错误日志', 15, 'change_errorlogs');
INSERT INTO `auth_permission` VALUES (59, 'Can delete 错误日志', 15, 'delete_errorlogs');
INSERT INTO `auth_permission` VALUES (60, 'Can view 错误日志', 15, 'view_errorlogs');
INSERT INTO `auth_permission` VALUES (61, 'Can add IP黑名单', 16, 'add_ipblacklist');
INSERT INTO `auth_permission` VALUES (62, 'Can change IP黑名单', 16, 'change_ipblacklist');
INSERT INTO `auth_permission` VALUES (63, 'Can delete IP黑名单', 16, 'delete_ipblacklist');
INSERT INTO `auth_permission` VALUES (64, 'Can view IP黑名单', 16, 'view_ipblacklist');
INSERT INTO `auth_permission` VALUES (65, 'Can add 在线用户', 17, 'add_onlineusers');
INSERT INTO `auth_permission` VALUES (66, 'Can change 在线用户', 17, 'change_onlineusers');
INSERT INTO `auth_permission` VALUES (67, 'Can delete 在线用户', 17, 'delete_onlineusers');
INSERT INTO `auth_permission` VALUES (68, 'Can view 在线用户', 17, 'view_onlineusers');
INSERT INTO `auth_permission` VALUES (69, 'Can add 服务器登录账户', 18, 'add_accounts');
INSERT INTO `auth_permission` VALUES (70, 'Can change 服务器登录账户', 18, 'change_accounts');
INSERT INTO `auth_permission` VALUES (71, 'Can delete 服务器登录账户', 18, 'delete_accounts');
INSERT INTO `auth_permission` VALUES (72, 'Can view 服务器登录账户', 18, 'view_accounts');
INSERT INTO `auth_permission` VALUES (73, 'Can add 资产总表', 19, 'add_assets');
INSERT INTO `auth_permission` VALUES (74, 'Can change 资产总表', 19, 'change_assets');
INSERT INTO `auth_permission` VALUES (75, 'Can delete 资产总表', 19, 'delete_assets');
INSERT INTO `auth_permission` VALUES (76, 'Can view 资产总表', 19, 'view_assets');
INSERT INTO `auth_permission` VALUES (77, 'Can add 机房', 20, 'add_idc');
INSERT INTO `auth_permission` VALUES (78, 'Can change 机房', 20, 'change_idc');
INSERT INTO `auth_permission` VALUES (79, 'Can delete 机房', 20, 'delete_idc');
INSERT INTO `auth_permission` VALUES (80, 'Can view 机房', 20, 'view_idc');
INSERT INTO `auth_permission` VALUES (81, 'Can add 存储设备', 21, 'add_storagedevices');
INSERT INTO `auth_permission` VALUES (82, 'Can change 存储设备', 21, 'change_storagedevices');
INSERT INTO `auth_permission` VALUES (83, 'Can delete 存储设备', 21, 'delete_storagedevices');
INSERT INTO `auth_permission` VALUES (84, 'Can view 存储设备', 21, 'view_storagedevices');
INSERT INTO `auth_permission` VALUES (85, 'Can add 服务器', 22, 'add_servers');
INSERT INTO `auth_permission` VALUES (86, 'Can change 服务器', 22, 'change_servers');
INSERT INTO `auth_permission` VALUES (87, 'Can delete 服务器', 22, 'delete_servers');
INSERT INTO `auth_permission` VALUES (88, 'Can view 服务器', 22, 'view_servers');
INSERT INTO `auth_permission` VALUES (89, 'Can add 安全设备', 23, 'add_securitydevices');
INSERT INTO `auth_permission` VALUES (90, 'Can change 安全设备', 23, 'change_securitydevices');
INSERT INTO `auth_permission` VALUES (91, 'Can delete 安全设备', 23, 'delete_securitydevices');
INSERT INTO `auth_permission` VALUES (92, 'Can view 安全设备', 23, 'view_securitydevices');
INSERT INTO `auth_permission` VALUES (93, 'Can add 网络设备', 24, 'add_networkdevices');
INSERT INTO `auth_permission` VALUES (94, 'Can change 网络设备', 24, 'change_networkdevices');
INSERT INTO `auth_permission` VALUES (95, 'Can delete 网络设备', 24, 'delete_networkdevices');
INSERT INTO `auth_permission` VALUES (96, 'Can view 网络设备', 24, 'view_networkdevices');
INSERT INTO `auth_permission` VALUES (97, 'Can add 机柜', 25, 'add_cabinets');
INSERT INTO `auth_permission` VALUES (98, 'Can change 机柜', 25, 'change_cabinets');
INSERT INTO `auth_permission` VALUES (99, 'Can delete 机柜', 25, 'delete_cabinets');
INSERT INTO `auth_permission` VALUES (100, 'Can view 机柜', 25, 'view_cabinets');
INSERT INTO `auth_permission` VALUES (101, 'Can add 数据库连接信息', 26, 'add_accounts');
INSERT INTO `auth_permission` VALUES (102, 'Can change 数据库连接信息', 26, 'change_accounts');
INSERT INTO `auth_permission` VALUES (103, 'Can delete 数据库连接信息', 26, 'delete_accounts');
INSERT INTO `auth_permission` VALUES (104, 'Can view 数据库连接信息', 26, 'view_accounts');
INSERT INTO `auth_permission` VALUES (105, 'Can add sql执行记录', 27, 'add_sqloperationlog');
INSERT INTO `auth_permission` VALUES (106, 'Can change sql执行记录', 27, 'change_sqloperationlog');
INSERT INTO `auth_permission` VALUES (107, 'Can delete sql执行记录', 27, 'delete_sqloperationlog');
INSERT INTO `auth_permission` VALUES (108, 'Can view sql执行记录', 27, 'view_sqloperationlog');
INSERT INTO `auth_permission` VALUES (109, 'Can add 果之sql脚本', 28, 'add_sqlscripts');
INSERT INTO `auth_permission` VALUES (110, 'Can change 果之sql脚本', 28, 'change_sqlscripts');
INSERT INTO `auth_permission` VALUES (111, 'Can delete 果之sql脚本', 28, 'delete_sqlscripts');
INSERT INTO `auth_permission` VALUES (112, 'Can view 果之sql脚本', 28, 'view_sqlscripts');
INSERT INTO `auth_permission` VALUES (113, 'Can add 数据库连接信息', 29, 'add_dbserverconfig');
INSERT INTO `auth_permission` VALUES (114, 'Can change 数据库连接信息', 29, 'change_dbserverconfig');
INSERT INTO `auth_permission` VALUES (115, 'Can delete 数据库连接信息', 29, 'delete_dbserverconfig');
INSERT INTO `auth_permission` VALUES (116, 'Can view 数据库连接信息', 29, 'view_dbserverconfig');
INSERT INTO `auth_permission` VALUES (117, 'Can add sql执行记录', 30, 'add_operatelogs');
INSERT INTO `auth_permission` VALUES (118, 'Can change sql执行记录', 30, 'change_operatelogs');
INSERT INTO `auth_permission` VALUES (119, 'Can delete sql执行记录', 30, 'delete_operatelogs');
INSERT INTO `auth_permission` VALUES (120, 'Can view sql执行记录', 30, 'view_operatelogs');

-- ----------------------------
-- Table structure for cmdb_accounts
-- ----------------------------
DROP TABLE IF EXISTS `cmdb_accounts`;
CREATE TABLE `cmdb_accounts`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `password` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `port` int(10) UNSIGNED NOT NULL,
  `server_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `cmdb_accounts_server_id_ec2329ef_fk_cmdb_servers_id`(`server_id`) USING BTREE,
  CONSTRAINT `cmdb_accounts_server_id_ec2329ef_fk_cmdb_servers_id` FOREIGN KEY (`server_id`) REFERENCES `cmdb_servers` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of cmdb_accounts
-- ----------------------------
INSERT INTO `cmdb_accounts` VALUES (1, 'root', 'iABB6kwpxC5umgerIgMxfw==', 22, 1);

-- ----------------------------
-- Table structure for cmdb_assets
-- ----------------------------
DROP TABLE IF EXISTS `cmdb_assets`;
CREATE TABLE `cmdb_assets`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `create_time` datetime(6) NULL DEFAULT NULL,
  `update_time` datetime(6) NULL DEFAULT NULL,
  `name` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `sn` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `asset_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `asset_status` smallint(6) NOT NULL,
  `manage_ip` char(39) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `expire_day` date NULL DEFAULT NULL,
  `memo` longtext CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `admin_id` int(11) NULL DEFAULT NULL,
  `cabinet_id` int(11) NULL DEFAULT NULL,
  `department_id` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `name`(`name`) USING BTREE,
  UNIQUE INDEX `sn`(`sn`) USING BTREE,
  INDEX `cmdb_assets_admin_id_a98b12a9_fk_oauth_users_id`(`admin_id`) USING BTREE,
  INDEX `cmdb_assets_cabinet_id_be681fe1_fk_cmdb_cabinets_id`(`cabinet_id`) USING BTREE,
  INDEX `cmdb_assets_department_id_b6019634_fk_system_departments_id`(`department_id`) USING BTREE,
  CONSTRAINT `cmdb_assets_admin_id_a98b12a9_fk_oauth_users_id` FOREIGN KEY (`admin_id`) REFERENCES `oauth_users` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `cmdb_assets_cabinet_id_be681fe1_fk_cmdb_cabinets_id` FOREIGN KEY (`cabinet_id`) REFERENCES `cmdb_cabinets` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `cmdb_assets_department_id_b6019634_fk_system_departments_id` FOREIGN KEY (`department_id`) REFERENCES `system_departments` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of cmdb_assets
-- ----------------------------
INSERT INTO `cmdb_assets` VALUES (1, '2021-05-08 09:05:04.566278', '2021-07-21 03:53:16.858571', '开发', '001', 'server', 0, '192.168.1.207', NULL, '', NULL, NULL, NULL);

-- ----------------------------
-- Table structure for cmdb_cabinets
-- ----------------------------
DROP TABLE IF EXISTS `cmdb_cabinets`;
CREATE TABLE `cmdb_cabinets`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `create_time` datetime(6) NULL DEFAULT NULL,
  `update_time` datetime(6) NULL DEFAULT NULL,
  `name` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `memo` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `idc_id` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `name`(`name`) USING BTREE,
  INDEX `cmdb_cabinets_idc_id_f10e1957_fk_cmdb_idc_id`(`idc_id`) USING BTREE,
  CONSTRAINT `cmdb_cabinets_idc_id_f10e1957_fk_cmdb_idc_id` FOREIGN KEY (`idc_id`) REFERENCES `cmdb_idc` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for cmdb_idc
-- ----------------------------
DROP TABLE IF EXISTS `cmdb_idc`;
CREATE TABLE `cmdb_idc`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `create_time` datetime(6) NULL DEFAULT NULL,
  `update_time` datetime(6) NULL DEFAULT NULL,
  `name` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `memo` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `name`(`name`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for cmdb_networkdevices
-- ----------------------------
DROP TABLE IF EXISTS `cmdb_networkdevices`;
CREATE TABLE `cmdb_networkdevices`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `device_type` smallint(6) NOT NULL,
  `vlan_ip` char(39) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `intranet_ip` char(39) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `model` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `firmware` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `port_num` smallint(6) NULL DEFAULT NULL,
  `device_detail` longtext CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `asset_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `asset_id`(`asset_id`) USING BTREE,
  CONSTRAINT `cmdb_networkdevices_asset_id_5b40c9c1_fk_cmdb_assets_id` FOREIGN KEY (`asset_id`) REFERENCES `cmdb_assets` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for cmdb_securitydevices
-- ----------------------------
DROP TABLE IF EXISTS `cmdb_securitydevices`;
CREATE TABLE `cmdb_securitydevices`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `device_type` smallint(6) NOT NULL,
  `model` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `asset_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `asset_id`(`asset_id`) USING BTREE,
  CONSTRAINT `cmdb_securitydevices_asset_id_a12aed36_fk_cmdb_assets_id` FOREIGN KEY (`asset_id`) REFERENCES `cmdb_assets` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for cmdb_servers
-- ----------------------------
DROP TABLE IF EXISTS `cmdb_servers`;
CREATE TABLE `cmdb_servers`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `server_type` varchar(16) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `server_system_type` smallint(6) NOT NULL,
  `model` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `use` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `asset_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `asset_id`(`asset_id`) USING BTREE,
  CONSTRAINT `cmdb_servers_asset_id_61fcfab4_fk_cmdb_assets_id` FOREIGN KEY (`asset_id`) REFERENCES `cmdb_assets` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of cmdb_servers
-- ----------------------------
INSERT INTO `cmdb_servers` VALUES (1, 'vm', 1, 'centos7', '数据', 1);

-- ----------------------------
-- Table structure for cmdb_storagedevices
-- ----------------------------
DROP TABLE IF EXISTS `cmdb_storagedevices`;
CREATE TABLE `cmdb_storagedevices`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `device_type` smallint(6) NOT NULL,
  `model` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `asset_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `asset_id`(`asset_id`) USING BTREE,
  CONSTRAINT `cmdb_storagedevices_asset_id_dd0245c6_fk_cmdb_assets_id` FOREIGN KEY (`asset_id`) REFERENCES `cmdb_assets` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for dbms_audits
-- ----------------------------
DROP TABLE IF EXISTS `dbms_audits`;
CREATE TABLE `dbms_audits`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `create_time` datetime(6) NULL DEFAULT NULL,
  `update_time` datetime(6) NULL DEFAULT NULL,
  `execute_db_name` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `operate_sql` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `user` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `auditor` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `status` int(11) NOT NULL,
  `db_id` int(11) NOT NULL,
  `reason` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `sprint` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `dbms_audits_db_id_623f07aa_fk_dbms_config_info_id`(`db_id`) USING BTREE,
  CONSTRAINT `dbms_audits_db_id_623f07aa_fk_dbms_config_info_id` FOREIGN KEY (`db_id`) REFERENCES `dbms_config_info` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 77 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;


-- ----------------------------
-- Table structure for dbms_config_info
-- ----------------------------
DROP TABLE IF EXISTS `dbms_config_info`;
CREATE TABLE `dbms_config_info`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `create_time` datetime(6) NULL DEFAULT NULL,
  `update_time` datetime(6) NULL DEFAULT NULL,
  `db_env` int(11) NOT NULL,
  `db_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `db_type` int(11) NOT NULL,
  `db_version` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `db_mark` varchar(200) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `db_name` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `db_username` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `db_password` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `db_port` int(10) UNSIGNED NOT NULL,
  `create_user` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 18 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;


-- ----------------------------
-- Table structure for dbms_operate_logs
-- ----------------------------
DROP TABLE IF EXISTS `dbms_operate_logs`;
CREATE TABLE `dbms_operate_logs`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `env` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `db_name` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `operate_sql` longtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `performer` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `create_time` datetime(6) NULL DEFAULT NULL,
  `status` int(11) NOT NULL,
  `error_info` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `sprint` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 329 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;


-- ----------------------------
-- Table structure for easyaudit_loginevent
-- ----------------------------
DROP TABLE IF EXISTS `easyaudit_loginevent`;
CREATE TABLE `easyaudit_loginevent`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `login_type` smallint(6) NOT NULL,
  `username` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `datetime` datetime(6) NULL DEFAULT NULL,
  `user_id` int(11) NULL DEFAULT NULL,
  `remote_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `easyaudit_loginevent_user_id_f47fcbfb_fk_oauth_users_id`(`user_id`) USING BTREE,
  INDEX `easyaudit_loginevent_remote_ip_52fb5c3c`(`remote_ip`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for easyaudit_requestevent
-- ----------------------------
DROP TABLE IF EXISTS `easyaudit_requestevent`;
CREATE TABLE `easyaudit_requestevent`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `url` varchar(254) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `method` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `query_string` longtext CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `remote_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `datetime` datetime(6) NULL DEFAULT NULL,
  `user_id` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `easyaudit_requestevent_user_id_da412f45_fk_oauth_users_id`(`user_id`) USING BTREE,
  INDEX `easyaudit_requestevent_method_83a0c884`(`method`) USING BTREE,
  INDEX `easyaudit_requestevent_remote_ip_d43af9b2`(`remote_ip`) USING BTREE,
  INDEX `easyaudit_requestevent_url_37d1b8c4`(`url`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for monitor_errorlogs
-- ----------------------------
DROP TABLE IF EXISTS `monitor_errorlogs`;
CREATE TABLE `monitor_errorlogs`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `create_time` datetime(6) NULL DEFAULT NULL,
  `update_time` datetime(6) NULL DEFAULT NULL,
  `username` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `view` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `desc` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `ip` char(39) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `detail` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 47 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of monitor_errorlogs
-- ----------------------------
INSERT INTO `monitor_errorlogs` VALUES (1, '2021-07-21 11:37:00.135900', '2021-07-21 11:37:00.135900', 'AnonymousUser', 'Schema', 'Schema for <class \'cmdb.serializers.servers.AccountsSerializer\'> would override distinct serializer <class \'dbms.serializers.sqlserializers.AccountsSerializer\'> because they implicitly share the same ref_name; explicitly set the ref_name atribute on both serializers\' Meta classes', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\views.py\", line 94, in get\n    schema = generator.get_schema(request, self.public)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 254, in get_schema\n    paths, prefix = self.get_paths(endpoints, components, request, public)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 412, in get_paths\n    operation = self.get_operation(view, path, prefix, method, components, request)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 454, in get_operation\n    operation = view_inspector.get_operation(operation_keys)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 45, in get_operation\n    responses = self.get_responses()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 180, in get_responses\n    response_serializers = self.get_response_serializers()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 235, in get_response_serializers\n    responses = self.get_default_responses()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 211, in get_default_responses\n    default_schema = self.serializer_to_schema(default_schema) or \'\'\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 446, in serializer_to_schema\n    self.field_inspectors, \'get_schema\', serializer, {\'field_inspectors\': self.field_inspectors}\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 118, in probe_inspectors\n    result = method(obj, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\field.py\", line 42, in get_schema\n    return self.probe_field_inspectors(serializer, openapi.Schema, self.use_definitions)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 238, in probe_field_inspectors\n    swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 118, in probe_inspectors\n    result = method(obj, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\field.py\", line 146, in field_to_swagger_object\n    % (actual_serializer, this_serializer))\ndrf_yasg.errors.SwaggerGenerationError: Schema for <class \'cmdb.serializers.servers.AccountsSerializer\'> would override distinct serializer <class \'dbms.serializers.sqlserializers.AccountsSerializer\'> because they implicitly share the same ref_name; explicitly set the ref_name atribute on both serializers\' Meta classes\n');
INSERT INTO `monitor_errorlogs` VALUES (2, '2021-07-21 11:37:11.975075', '2021-07-21 11:37:11.975075', 'AnonymousUser', 'Schema', 'Schema for <class \'cmdb.serializers.servers.AccountsSerializer\'> would override distinct serializer <class \'dbms.serializers.sqlserializers.AccountsSerializer\'> because they implicitly share the same ref_name; explicitly set the ref_name atribute on both serializers\' Meta classes', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\views.py\", line 94, in get\n    schema = generator.get_schema(request, self.public)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 254, in get_schema\n    paths, prefix = self.get_paths(endpoints, components, request, public)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 412, in get_paths\n    operation = self.get_operation(view, path, prefix, method, components, request)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 454, in get_operation\n    operation = view_inspector.get_operation(operation_keys)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 45, in get_operation\n    responses = self.get_responses()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 180, in get_responses\n    response_serializers = self.get_response_serializers()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 235, in get_response_serializers\n    responses = self.get_default_responses()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 211, in get_default_responses\n    default_schema = self.serializer_to_schema(default_schema) or \'\'\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 446, in serializer_to_schema\n    self.field_inspectors, \'get_schema\', serializer, {\'field_inspectors\': self.field_inspectors}\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 118, in probe_inspectors\n    result = method(obj, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\field.py\", line 42, in get_schema\n    return self.probe_field_inspectors(serializer, openapi.Schema, self.use_definitions)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 238, in probe_field_inspectors\n    swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 118, in probe_inspectors\n    result = method(obj, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\field.py\", line 146, in field_to_swagger_object\n    % (actual_serializer, this_serializer))\ndrf_yasg.errors.SwaggerGenerationError: Schema for <class \'cmdb.serializers.servers.AccountsSerializer\'> would override distinct serializer <class \'dbms.serializers.sqlserializers.AccountsSerializer\'> because they implicitly share the same ref_name; explicitly set the ref_name atribute on both serializers\' Meta classes\n');
INSERT INTO `monitor_errorlogs` VALUES (3, '2021-07-21 11:37:40.571478', '2021-07-21 11:37:40.571478', 'AnonymousUser', 'Schema', 'Schema for <class \'cmdb.serializers.servers.AccountsSerializer\'> would override distinct serializer <class \'dbms.serializers.sqlserializers.AccountsSerializer\'> because they implicitly share the same ref_name; explicitly set the ref_name atribute on both serializers\' Meta classes', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\views.py\", line 94, in get\n    schema = generator.get_schema(request, self.public)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 254, in get_schema\n    paths, prefix = self.get_paths(endpoints, components, request, public)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 412, in get_paths\n    operation = self.get_operation(view, path, prefix, method, components, request)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 454, in get_operation\n    operation = view_inspector.get_operation(operation_keys)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 45, in get_operation\n    responses = self.get_responses()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 180, in get_responses\n    response_serializers = self.get_response_serializers()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 235, in get_response_serializers\n    responses = self.get_default_responses()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 211, in get_default_responses\n    default_schema = self.serializer_to_schema(default_schema) or \'\'\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 446, in serializer_to_schema\n    self.field_inspectors, \'get_schema\', serializer, {\'field_inspectors\': self.field_inspectors}\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 118, in probe_inspectors\n    result = method(obj, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\field.py\", line 42, in get_schema\n    return self.probe_field_inspectors(serializer, openapi.Schema, self.use_definitions)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 238, in probe_field_inspectors\n    swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 118, in probe_inspectors\n    result = method(obj, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\field.py\", line 146, in field_to_swagger_object\n    % (actual_serializer, this_serializer))\ndrf_yasg.errors.SwaggerGenerationError: Schema for <class \'cmdb.serializers.servers.AccountsSerializer\'> would override distinct serializer <class \'dbms.serializers.sqlserializers.AccountsSerializer\'> because they implicitly share the same ref_name; explicitly set the ref_name atribute on both serializers\' Meta classes\n');
INSERT INTO `monitor_errorlogs` VALUES (4, '2021-07-21 11:40:57.121519', '2021-07-21 11:40:57.121519', 'AnonymousUser', 'Schema', 'Schema for <class \'cmdb.serializers.servers.AccountsSerializer\'> would override distinct serializer <class \'dbms.serializers.sqlserializers.AccountsSerializer\'> because they implicitly share the same ref_name; explicitly set the ref_name atribute on both serializers\' Meta classes', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\views.py\", line 94, in get\n    schema = generator.get_schema(request, self.public)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 254, in get_schema\n    paths, prefix = self.get_paths(endpoints, components, request, public)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 412, in get_paths\n    operation = self.get_operation(view, path, prefix, method, components, request)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 454, in get_operation\n    operation = view_inspector.get_operation(operation_keys)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 45, in get_operation\n    responses = self.get_responses()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 180, in get_responses\n    response_serializers = self.get_response_serializers()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 235, in get_response_serializers\n    responses = self.get_default_responses()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 211, in get_default_responses\n    default_schema = self.serializer_to_schema(default_schema) or \'\'\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 446, in serializer_to_schema\n    self.field_inspectors, \'get_schema\', serializer, {\'field_inspectors\': self.field_inspectors}\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 118, in probe_inspectors\n    result = method(obj, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\field.py\", line 42, in get_schema\n    return self.probe_field_inspectors(serializer, openapi.Schema, self.use_definitions)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 238, in probe_field_inspectors\n    swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 118, in probe_inspectors\n    result = method(obj, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\field.py\", line 146, in field_to_swagger_object\n    % (actual_serializer, this_serializer))\ndrf_yasg.errors.SwaggerGenerationError: Schema for <class \'cmdb.serializers.servers.AccountsSerializer\'> would override distinct serializer <class \'dbms.serializers.sqlserializers.AccountsSerializer\'> because they implicitly share the same ref_name; explicitly set the ref_name atribute on both serializers\' Meta classes\n');
INSERT INTO `monitor_errorlogs` VALUES (5, '2021-07-21 11:43:19.754920', '2021-07-21 11:43:19.754920', 'AnonymousUser', 'Schema', 'Schema for <class \'cmdb.serializers.servers.AccountsSerializer\'> would override distinct serializer <class \'dbms.serializers.sqlserializers.AccountsSerializer\'> because they implicitly share the same ref_name; explicitly set the ref_name atribute on both serializers\' Meta classes', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\views.py\", line 94, in get\n    schema = generator.get_schema(request, self.public)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 254, in get_schema\n    paths, prefix = self.get_paths(endpoints, components, request, public)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 412, in get_paths\n    operation = self.get_operation(view, path, prefix, method, components, request)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\generators.py\", line 454, in get_operation\n    operation = view_inspector.get_operation(operation_keys)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 45, in get_operation\n    responses = self.get_responses()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 180, in get_responses\n    response_serializers = self.get_response_serializers()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 235, in get_response_serializers\n    responses = self.get_default_responses()\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\view.py\", line 211, in get_default_responses\n    default_schema = self.serializer_to_schema(default_schema) or \'\'\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 446, in serializer_to_schema\n    self.field_inspectors, \'get_schema\', serializer, {\'field_inspectors\': self.field_inspectors}\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 118, in probe_inspectors\n    result = method(obj, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\field.py\", line 42, in get_schema\n    return self.probe_field_inspectors(serializer, openapi.Schema, self.use_definitions)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 238, in probe_field_inspectors\n    swagger_object_type=swagger_object_type, use_references=use_references, **kwargs\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\base.py\", line 118, in probe_inspectors\n    result = method(obj, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\drf_yasg\\inspectors\\field.py\", line 146, in field_to_swagger_object\n    % (actual_serializer, this_serializer))\ndrf_yasg.errors.SwaggerGenerationError: Schema for <class \'cmdb.serializers.servers.AccountsSerializer\'> would override distinct serializer <class \'dbms.serializers.sqlserializers.AccountsSerializer\'> because they implicitly share the same ref_name; explicitly set the ref_name atribute on both serializers\' Meta classes\n');
INSERT INTO `monitor_errorlogs` VALUES (6, '2021-08-08 14:40:55.764589', '2021-08-08 14:40:55.764589', 'admin', 'Accounts Log Generic', 'invalid literal for int() with base 10: \'生产\'', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operation_log.py\", line 289, in post\n    self.perform_create(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 24, in perform_create\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 212, in save\n    self.instance = self.create(validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 948, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 422, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 870, in _save_table\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 908, in _do_insert\n    using=using, raw=raw)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 1186, in _insert\n    return query.get_compiler(using=using).execute_sql(return_id)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1374, in execute_sql\n    for sql, params in self.as_sql():\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1318, in as_sql\n    for obj in self.query.objs\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1318, in <listcomp>\n    for obj in self.query.objs\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1317, in <listcomp>\n    [self.prepare_value(field, self.pre_save_val(field, obj)) for field in fields]\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1258, in prepare_value\n    value = field.get_db_prep_save(value, connection=self.connection)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 793, in get_db_prep_save\n    return self.get_db_prep_value(value, connection=connection, prepared=False)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 788, in get_db_prep_value\n    value = self.get_prep_value(value)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 1825, in get_prep_value\n    return int(value)\nValueError: invalid literal for int() with base 10: \'生产\'\n');
INSERT INTO `monitor_errorlogs` VALUES (7, '2021-08-10 01:20:14.559035', '2021-08-10 01:20:14.559035', 'admin', 'Accounts Generic Api', 'invalid literal for int() with base 10: \'生产\'', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operation_log.py\", line 258, in put\n    self.perform_update(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 78, in perform_update\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 207, in save\n    self.instance = self.update(self.instance, validated_data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\sqlserializers.py\", line 106, in update\n    instance.save()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 851, in _save_table\n    forced_update)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 900, in _do_update\n    return filtered._update(values) > 0\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 760, in _update\n    return query.get_compiler(self.db).execute_sql(CURSOR)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1469, in execute_sql\n    cursor = super().execute_sql(result_type)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1127, in execute_sql\n    sql, params = self.as_sql()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1435, in as_sql\n    val = field.get_db_prep_save(val, connection=self.connection)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 793, in get_db_prep_save\n    return self.get_db_prep_value(value, connection=connection, prepared=False)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 788, in get_db_prep_value\n    value = self.get_prep_value(value)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 1825, in get_prep_value\n    return int(value)\nValueError: invalid literal for int() with base 10: \'生产\'\n');
INSERT INTO `monitor_errorlogs` VALUES (8, '2021-08-10 01:21:38.696633', '2021-08-10 01:21:38.696633', 'admin', 'Accounts Generic Api', 'invalid literal for int() with base 10: \'生产\'', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operation_log.py\", line 258, in put\n    self.perform_update(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 78, in perform_update\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 207, in save\n    self.instance = self.update(self.instance, validated_data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\sqlserializers.py\", line 106, in update\n    instance.save()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 851, in _save_table\n    forced_update)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 900, in _do_update\n    return filtered._update(values) > 0\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 760, in _update\n    return query.get_compiler(self.db).execute_sql(CURSOR)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1469, in execute_sql\n    cursor = super().execute_sql(result_type)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1127, in execute_sql\n    sql, params = self.as_sql()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1435, in as_sql\n    val = field.get_db_prep_save(val, connection=self.connection)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 793, in get_db_prep_save\n    return self.get_db_prep_value(value, connection=connection, prepared=False)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 788, in get_db_prep_value\n    value = self.get_prep_value(value)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 1825, in get_prep_value\n    return int(value)\nValueError: invalid literal for int() with base 10: \'生产\'\n');
INSERT INTO `monitor_errorlogs` VALUES (9, '2021-08-10 01:23:12.512354', '2021-08-10 01:23:12.512354', 'admin', 'Accounts Generic Api', 'invalid literal for int() with base 10: \'生产\'', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operation_log.py\", line 258, in put\n    self.perform_update(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 78, in perform_update\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 207, in save\n    self.instance = self.update(self.instance, validated_data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\sqlserializers.py\", line 106, in update\n    instance.save()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 851, in _save_table\n    forced_update)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 900, in _do_update\n    return filtered._update(values) > 0\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 760, in _update\n    return query.get_compiler(self.db).execute_sql(CURSOR)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1469, in execute_sql\n    cursor = super().execute_sql(result_type)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1127, in execute_sql\n    sql, params = self.as_sql()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1435, in as_sql\n    val = field.get_db_prep_save(val, connection=self.connection)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 793, in get_db_prep_save\n    return self.get_db_prep_value(value, connection=connection, prepared=False)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 788, in get_db_prep_value\n    value = self.get_prep_value(value)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\fields\\__init__.py\", line 1825, in get_prep_value\n    return int(value)\nValueError: invalid literal for int() with base 10: \'生产\'\n');
INSERT INTO `monitor_errorlogs` VALUES (10, '2021-08-17 11:28:39.912714', '2021-08-17 11:28:39.912714', 'admin', 'Db Server Config Generic', '\'DBServerConfig\' object has no attribute \'password\'', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\db.py\", line 252, in post\n    self.perform_create(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 24, in perform_create\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 212, in save\n    self.instance = self.create(validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 948, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 422, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 766, in save_base\n    update_fields=update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\dispatch\\dispatcher.py\", line 175, in send\n    for receiver in self._live_receivers(sender)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\dispatch\\dispatcher.py\", line 175, in <listcomp>\n    for receiver in self._live_receivers(sender)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\signals.py\", line 24, in encrypt_password_accounts\n    instance.set_password(\'password\', instance.password)\nAttributeError: \'DBServerConfig\' object has no attribute \'password\'\n');
INSERT INTO `monitor_errorlogs` VALUES (11, '2021-08-18 01:41:45.758833', '2021-08-18 01:41:45.758833', 'admin', 'Db Server Config Generic Api', '(1406, \"Data too long for column \'db_password\' at row 1\")', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\db.py\", line 221, in put\n    self.perform_update(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 78, in perform_update\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 207, in save\n    self.instance = self.update(self.instance, validated_data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\sqlserializers.py\", line 106, in update\n    instance.save()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 851, in _save_table\n    forced_update)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 900, in _do_update\n    return filtered._update(values) > 0\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 760, in _update\n    return query.get_compiler(self.db).execute_sql(CURSOR)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1469, in execute_sql\n    cursor = super().execute_sql(result_type)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1140, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n');
INSERT INTO `monitor_errorlogs` VALUES (12, '2021-08-18 01:41:58.333936', '2021-08-18 01:41:58.333936', 'admin', 'Db Server Config Generic Api', '(1406, \"Data too long for column \'db_password\' at row 1\")', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\db.py\", line 221, in put\n    self.perform_update(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 78, in perform_update\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 207, in save\n    self.instance = self.update(self.instance, validated_data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\sqlserializers.py\", line 106, in update\n    instance.save()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 851, in _save_table\n    forced_update)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 900, in _do_update\n    return filtered._update(values) > 0\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 760, in _update\n    return query.get_compiler(self.db).execute_sql(CURSOR)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1469, in execute_sql\n    cursor = super().execute_sql(result_type)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1140, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n');
INSERT INTO `monitor_errorlogs` VALUES (13, '2021-08-18 01:42:18.136429', '2021-08-18 01:42:18.136429', 'admin', 'Db Server Config Generic Api', '(1406, \"Data too long for column \'db_password\' at row 1\")', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\db.py\", line 221, in put\n    self.perform_update(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 78, in perform_update\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 207, in save\n    self.instance = self.update(self.instance, validated_data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\sqlserializers.py\", line 106, in update\n    instance.save()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 851, in _save_table\n    forced_update)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 900, in _do_update\n    return filtered._update(values) > 0\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 760, in _update\n    return query.get_compiler(self.db).execute_sql(CURSOR)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1469, in execute_sql\n    cursor = super().execute_sql(result_type)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1140, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n');
INSERT INTO `monitor_errorlogs` VALUES (14, '2021-08-18 01:42:19.638119', '2021-08-18 01:42:19.638119', 'admin', 'Db Server Config Generic Api', '(1406, \"Data too long for column \'db_password\' at row 1\")', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\db.py\", line 221, in put\n    self.perform_update(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 78, in perform_update\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 207, in save\n    self.instance = self.update(self.instance, validated_data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\sqlserializers.py\", line 106, in update\n    instance.save()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 851, in _save_table\n    forced_update)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 900, in _do_update\n    return filtered._update(values) > 0\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 760, in _update\n    return query.get_compiler(self.db).execute_sql(CURSOR)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1469, in execute_sql\n    cursor = super().execute_sql(result_type)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1140, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n');
INSERT INTO `monitor_errorlogs` VALUES (15, '2021-08-18 01:42:38.701588', '2021-08-18 01:42:38.701588', 'admin', 'Db Server Config Generic Api', '(1406, \"Data too long for column \'db_password\' at row 1\")', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\db.py\", line 221, in put\n    self.perform_update(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 78, in perform_update\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 207, in save\n    self.instance = self.update(self.instance, validated_data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\sqlserializers.py\", line 106, in update\n    instance.save()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 851, in _save_table\n    forced_update)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 900, in _do_update\n    return filtered._update(values) > 0\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 760, in _update\n    return query.get_compiler(self.db).execute_sql(CURSOR)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1469, in execute_sql\n    cursor = super().execute_sql(result_type)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1140, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n');
INSERT INTO `monitor_errorlogs` VALUES (16, '2021-08-18 01:42:41.716344', '2021-08-18 01:42:41.716344', 'admin', 'Db Server Config Generic Api', '(1406, \"Data too long for column \'db_password\' at row 1\")', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\db.py\", line 221, in put\n    self.perform_update(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 78, in perform_update\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 207, in save\n    self.instance = self.update(self.instance, validated_data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\sqlserializers.py\", line 106, in update\n    instance.save()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 851, in _save_table\n    forced_update)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 900, in _do_update\n    return filtered._update(values) > 0\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 760, in _update\n    return query.get_compiler(self.db).execute_sql(CURSOR)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1469, in execute_sql\n    cursor = super().execute_sql(result_type)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1140, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n');
INSERT INTO `monitor_errorlogs` VALUES (17, '2021-08-18 01:42:43.010417', '2021-08-18 01:42:43.010417', 'admin', 'Db Server Config Generic Api', '(1406, \"Data too long for column \'db_password\' at row 1\")', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\db.py\", line 221, in put\n    self.perform_update(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 78, in perform_update\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 207, in save\n    self.instance = self.update(self.instance, validated_data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\sqlserializers.py\", line 106, in update\n    instance.save()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 851, in _save_table\n    forced_update)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 900, in _do_update\n    return filtered._update(values) > 0\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 760, in _update\n    return query.get_compiler(self.db).execute_sql(CURSOR)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1469, in execute_sql\n    cursor = super().execute_sql(result_type)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1140, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n');
INSERT INTO `monitor_errorlogs` VALUES (18, '2021-08-18 02:14:09.049808', '2021-08-18 02:14:09.049808', 'admin', 'Db Server Config Generic Api', '(1406, \"Data too long for column \'db_password\' at row 1\")', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\db.py\", line 221, in put\n    self.perform_update(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 78, in perform_update\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 207, in save\n    self.instance = self.update(self.instance, validated_data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\sqlserializers.py\", line 106, in update\n    instance.save()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 851, in _save_table\n    forced_update)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 900, in _do_update\n    return filtered._update(values) > 0\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 760, in _update\n    return query.get_compiler(self.db).execute_sql(CURSOR)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1469, in execute_sql\n    cursor = super().execute_sql(result_type)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1140, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n');
INSERT INTO `monitor_errorlogs` VALUES (19, '2021-08-18 02:21:00.990114', '2021-08-18 02:21:00.990114', 'admin', 'Db Server Config Generic Api', '(1406, \"Data too long for column \'db_password\' at row 1\")', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\db.py\", line 221, in put\n    self.perform_update(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 78, in perform_update\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 207, in save\n    self.instance = self.update(self.instance, validated_data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\sqlserializers.py\", line 106, in update\n    instance.save()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 851, in _save_table\n    forced_update)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 900, in _do_update\n    return filtered._update(values) > 0\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 760, in _update\n    return query.get_compiler(self.db).execute_sql(CURSOR)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1469, in execute_sql\n    cursor = super().execute_sql(result_type)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1140, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.DataError: (1406, \"Data too long for column \'db_password\' at row 1\")\n');
INSERT INTO `monitor_errorlogs` VALUES (20, '2021-08-18 08:32:43.077107', '2021-08-18 08:32:43.077107', 'admin', 'Db Server Config Generic', 'Cannot resolve keyword \'d\' into field. Choices are: create_time, create_user, db_env, db_ip, db_mark, db_name, db_password, db_port, db_type, db_username, db_version, id, update_time', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 239, in get\n    return self.list(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 38, in list\n    queryset = self.filter_queryset(self.get_queryset())\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 150, in filter_queryset\n    queryset = backend().filter_queryset(self.request, queryset, self)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\filters.py\", line 122, in filter_queryset\n    queryset = queryset.filter(reduce(operator.and_, conditions))\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 892, in filter\n    return self._filter_or_exclude(False, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 910, in _filter_or_exclude\n    clone.query.add_q(Q(*args, **kwargs))\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1290, in add_q\n    clause, _ = self._add_q(q_object, self.used_aliases)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1312, in _add_q\n    current_negated, allow_joins, split_subq, simple_col)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1318, in _add_q\n    split_subq=split_subq, simple_col=simple_col,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1190, in build_filter\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1049, in solve_lookup_type\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1420, in names_to_path\n    \"Choices are: %s\" % (name, \", \".join(available)))\ndjango.core.exceptions.FieldError: Cannot resolve keyword \'d\' into field. Choices are: create_time, create_user, db_env, db_ip, db_mark, db_name, db_password, db_port, db_type, db_username, db_version, id, update_time\n');
INSERT INTO `monitor_errorlogs` VALUES (21, '2021-08-18 08:32:51.062456', '2021-08-18 08:32:51.062456', 'admin', 'Db Server Config Generic', 'Cannot resolve keyword \'d\' into field. Choices are: create_time, create_user, db_env, db_ip, db_mark, db_name, db_password, db_port, db_type, db_username, db_version, id, update_time', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 239, in get\n    return self.list(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 38, in list\n    queryset = self.filter_queryset(self.get_queryset())\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 150, in filter_queryset\n    queryset = backend().filter_queryset(self.request, queryset, self)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\filters.py\", line 122, in filter_queryset\n    queryset = queryset.filter(reduce(operator.and_, conditions))\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 892, in filter\n    return self._filter_or_exclude(False, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 910, in _filter_or_exclude\n    clone.query.add_q(Q(*args, **kwargs))\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1290, in add_q\n    clause, _ = self._add_q(q_object, self.used_aliases)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1312, in _add_q\n    current_negated, allow_joins, split_subq, simple_col)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1318, in _add_q\n    split_subq=split_subq, simple_col=simple_col,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1190, in build_filter\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1049, in solve_lookup_type\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1420, in names_to_path\n    \"Choices are: %s\" % (name, \", \".join(available)))\ndjango.core.exceptions.FieldError: Cannot resolve keyword \'d\' into field. Choices are: create_time, create_user, db_env, db_ip, db_mark, db_name, db_password, db_port, db_type, db_username, db_version, id, update_time\n');
INSERT INTO `monitor_errorlogs` VALUES (22, '2021-08-18 08:40:04.840685', '2021-08-18 08:40:04.840685', 'admin', 'Db Server Config Generic', 'Cannot resolve keyword \'d\' into field. Choices are: create_time, create_user, db_env, db_ip, db_mark, db_name, db_password, db_port, db_type, db_username, db_version, id, update_time', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 239, in get\n    return self.list(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 38, in list\n    queryset = self.filter_queryset(self.get_queryset())\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 150, in filter_queryset\n    queryset = backend().filter_queryset(self.request, queryset, self)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\filters.py\", line 122, in filter_queryset\n    queryset = queryset.filter(reduce(operator.and_, conditions))\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 892, in filter\n    return self._filter_or_exclude(False, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 910, in _filter_or_exclude\n    clone.query.add_q(Q(*args, **kwargs))\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1290, in add_q\n    clause, _ = self._add_q(q_object, self.used_aliases)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1312, in _add_q\n    current_negated, allow_joins, split_subq, simple_col)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1318, in _add_q\n    split_subq=split_subq, simple_col=simple_col,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1190, in build_filter\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1049, in solve_lookup_type\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 1420, in names_to_path\n    \"Choices are: %s\" % (name, \", \".join(available)))\ndjango.core.exceptions.FieldError: Cannot resolve keyword \'d\' into field. Choices are: create_time, create_user, db_env, db_ip, db_mark, db_name, db_password, db_port, db_type, db_username, db_version, id, update_time\n');
INSERT INTO `monitor_errorlogs` VALUES (23, '2021-08-19 02:04:04.637563', '2021-08-19 02:04:04.637563', 'admin', 'Db Server Config Generic', '\'OrderingFilter\' object has no attribute \'filter_queryset\'', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 239, in get\n    return self.list(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 38, in list\n    queryset = self.filter_queryset(self.get_queryset())\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 150, in filter_queryset\n    queryset = backend().filter_queryset(self.request, queryset, self)\nAttributeError: \'OrderingFilter\' object has no attribute \'filter_queryset\'\n');
INSERT INTO `monitor_errorlogs` VALUES (24, '2021-08-19 02:04:17.047729', '2021-08-19 02:04:17.047729', 'admin', 'Db Server Config Generic', '\'OrderingFilter\' object has no attribute \'filter_queryset\'', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 239, in get\n    return self.list(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 38, in list\n    queryset = self.filter_queryset(self.get_queryset())\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 150, in filter_queryset\n    queryset = backend().filter_queryset(self.request, queryset, self)\nAttributeError: \'OrderingFilter\' object has no attribute \'filter_queryset\'\n');
INSERT INTO `monitor_errorlogs` VALUES (25, '2021-08-19 02:06:02.801455', '2021-08-19 02:06:02.801455', 'admin', 'Db Server Config Generic', '\'OrderingFilter\' object has no attribute \'filter_queryset\'', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 239, in get\n    return self.list(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 38, in list\n    queryset = self.filter_queryset(self.get_queryset())\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 150, in filter_queryset\n    queryset = backend().filter_queryset(self.request, queryset, self)\nAttributeError: \'OrderingFilter\' object has no attribute \'filter_queryset\'\n');
INSERT INTO `monitor_errorlogs` VALUES (26, '2021-08-19 02:06:07.252941', '2021-08-19 02:06:07.252941', 'admin', 'Db Server Config Generic', '\'OrderingFilter\' object has no attribute \'filter_queryset\'', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 239, in get\n    return self.list(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 38, in list\n    queryset = self.filter_queryset(self.get_queryset())\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 150, in filter_queryset\n    queryset = backend().filter_queryset(self.request, queryset, self)\nAttributeError: \'OrderingFilter\' object has no attribute \'filter_queryset\'\n');
INSERT INTO `monitor_errorlogs` VALUES (27, '2021-08-19 02:06:12.767891', '2021-08-19 02:06:12.767891', 'admin', 'Db Server Config Generic', '\'OrderingFilter\' object has no attribute \'filter_queryset\'', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 239, in get\n    return self.list(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 38, in list\n    queryset = self.filter_queryset(self.get_queryset())\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 150, in filter_queryset\n    queryset = backend().filter_queryset(self.request, queryset, self)\nAttributeError: \'OrderingFilter\' object has no attribute \'filter_queryset\'\n');
INSERT INTO `monitor_errorlogs` VALUES (28, '2021-08-23 04:14:04.307718', '2021-08-23 04:14:04.308718', 'admin', 'Databases', '\'db_name\'', '192.168.1.8', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operates.py\", line 143, in post\n    database_name = request.data[\"db_name\"]\nKeyError: \'db_name\'\n');
INSERT INTO `monitor_errorlogs` VALUES (29, '2021-08-23 04:18:47.613951', '2021-08-23 04:18:47.613951', 'admin', 'Operate Logs', '(1146, \"Table \'mydrf.dbms_operate_logs\' doesn\'t exist\")', '192.168.1.8', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.ProgrammingError: (1146, \"Table \'mydrf.dbms_operate_logs\' doesn\'t exist\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 239, in get\n    return self.list(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 40, in list\n    page = self.paginate_queryset(queryset)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\generics.py\", line 171, in paginate_queryset\n    return self.paginator.paginate_queryset(queryset, self.request, view=self)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\pagination.py\", line 206, in paginate_queryset\n    self.page = paginator.page(page_number)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\core\\paginator.py\", line 70, in page\n    number = self.validate_number(number)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\core\\paginator.py\", line 48, in validate_number\n    if number > self.num_pages:\n  File \"C:\\python3.6\\lib\\site-packages\\django\\utils\\functional.py\", line 80, in __get__\n    res = instance.__dict__[self.name] = self.func(instance)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\core\\paginator.py\", line 97, in num_pages\n    if self.count == 0 and not self.allow_empty_first_page:\n  File \"C:\\python3.6\\lib\\site-packages\\django\\utils\\functional.py\", line 80, in __get__\n    res = instance.__dict__[self.name] = self.func(instance)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\core\\paginator.py\", line 91, in count\n    return c()\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 392, in count\n    return self.query.get_count(using=self.db)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 504, in get_count\n    number = obj.get_aggregation(using, [\'__count\'])[\'__count\']\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\query.py\", line 489, in get_aggregation\n    result = compiler.execute_sql(SINGLE)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1140, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.ProgrammingError: (1146, \"Table \'mydrf.dbms_operate_logs\' doesn\'t exist\")\n');
INSERT INTO `monitor_errorlogs` VALUES (30, '2021-09-07 09:56:08.879702', '2021-09-07 09:56:08.879702', 'admin', 'Databases', 'post() got an unexpected keyword argument \'pk\'', '192.168.1.8', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\nTypeError: post() got an unexpected keyword argument \'pk\'\n');
INSERT INTO `monitor_errorlogs` VALUES (31, '2021-09-07 13:57:22.396889', '2021-09-07 13:57:22.396889', 'admin', 'Audits List', '(1146, \"Table \'mydrf.dbms_audits\' doesn\'t exist\")', '192.168.1.8', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.ProgrammingError: (1146, \"Table \'mydrf.dbms_audits\' doesn\'t exist\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operates.py\", line 353, in create\n    self.perform_create(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 24, in perform_create\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 212, in save\n    self.instance = self.create(validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 948, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 422, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 870, in _save_table\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 908, in _do_insert\n    using=using, raw=raw)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 1186, in _insert\n    return query.get_compiler(using=using).execute_sql(return_id)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1375, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.ProgrammingError: (1146, \"Table \'mydrf.dbms_audits\' doesn\'t exist\")\n');
INSERT INTO `monitor_errorlogs` VALUES (32, '2021-09-10 18:00:27.889117', '2021-09-10 18:00:27.889117', 'admin', 'Audits Instance', 'Expecting value: line 1 column 2 (char 1)', '192.168.1.8', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 56, in retrieve\n    return Response(serializer.data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 562, in data\n    ret = super().data\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 260, in data\n    self._data = self.to_representation(self.instance)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\audits.py\", line 31, in to_representation\n    ret[\"execute_db_name\"] = json.loads(instance.execute_db_name)\n  File \"C:\\python3.6\\lib\\json\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)\n');
INSERT INTO `monitor_errorlogs` VALUES (33, '2021-09-10 18:03:58.596076', '2021-09-10 18:03:58.596076', 'admin', 'Audits List', 'Expecting value: line 1 column 2 (char 1)', '192.168.1.8', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 43, in list\n    return self.get_paginated_response(serializer.data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 760, in data\n    ret = super().data\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 260, in data\n    self._data = self.to_representation(self.instance)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in to_representation\n    self.child.to_representation(item) for item in iterable\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in <listcomp>\n    self.child.to_representation(item) for item in iterable\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\audits.py\", line 31, in to_representation\n    ret[\"execute_db_name\"] = json.loads(instance.execute_db_name)\n  File \"C:\\python3.6\\lib\\json\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)\n');
INSERT INTO `monitor_errorlogs` VALUES (34, '2021-09-10 18:04:06.134480', '2021-09-10 18:04:06.134480', 'admin', 'Audits List', 'Expecting value: line 1 column 2 (char 1)', '192.168.1.8', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 43, in list\n    return self.get_paginated_response(serializer.data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 760, in data\n    ret = super().data\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 260, in data\n    self._data = self.to_representation(self.instance)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in to_representation\n    self.child.to_representation(item) for item in iterable\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in <listcomp>\n    self.child.to_representation(item) for item in iterable\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\audits.py\", line 31, in to_representation\n    ret[\"execute_db_name\"] = json.loads(instance.execute_db_name)\n  File \"C:\\python3.6\\lib\\json\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)\n');
INSERT INTO `monitor_errorlogs` VALUES (35, '2021-09-10 18:04:19.087928', '2021-09-10 18:04:19.087928', 'admin', 'Audits List', 'Expecting value: line 1 column 2 (char 1)', '192.168.1.8', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 43, in list\n    return self.get_paginated_response(serializer.data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 760, in data\n    ret = super().data\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 260, in data\n    self._data = self.to_representation(self.instance)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in to_representation\n    self.child.to_representation(item) for item in iterable\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in <listcomp>\n    self.child.to_representation(item) for item in iterable\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\audits.py\", line 31, in to_representation\n    ret[\"execute_db_name\"] = json.loads(instance.execute_db_name)\n  File \"C:\\python3.6\\lib\\json\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)\n');
INSERT INTO `monitor_errorlogs` VALUES (36, '2021-09-10 18:04:53.380041', '2021-09-10 18:04:53.380041', 'admin', 'Audits List', 'Expecting value: line 1 column 2 (char 1)', '192.168.1.8', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 43, in list\n    return self.get_paginated_response(serializer.data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 760, in data\n    ret = super().data\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 260, in data\n    self._data = self.to_representation(self.instance)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in to_representation\n    self.child.to_representation(item) for item in iterable\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in <listcomp>\n    self.child.to_representation(item) for item in iterable\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\audits.py\", line 31, in to_representation\n    ret[\"execute_db_name\"] = json.loads(instance.execute_db_name)\n  File \"C:\\python3.6\\lib\\json\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)\n');
INSERT INTO `monitor_errorlogs` VALUES (37, '2021-09-10 18:05:10.817381', '2021-09-10 18:05:10.817381', 'admin', 'Audits List', 'Expecting value: line 1 column 2 (char 1)', '192.168.1.8', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 43, in list\n    return self.get_paginated_response(serializer.data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 760, in data\n    ret = super().data\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 260, in data\n    self._data = self.to_representation(self.instance)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in to_representation\n    self.child.to_representation(item) for item in iterable\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in <listcomp>\n    self.child.to_representation(item) for item in iterable\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\audits.py\", line 31, in to_representation\n    ret[\"execute_db_name\"] = json.loads(instance.execute_db_name)\n  File \"C:\\python3.6\\lib\\json\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)\n');
INSERT INTO `monitor_errorlogs` VALUES (38, '2021-09-10 18:08:32.083298', '2021-09-10 18:08:32.084297', 'admin', 'Audits List', 'Expecting value: line 1 column 2 (char 1)', '192.168.1.8', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 43, in list\n    return self.get_paginated_response(serializer.data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 760, in data\n    ret = super().data\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 260, in data\n    self._data = self.to_representation(self.instance)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in to_representation\n    self.child.to_representation(item) for item in iterable\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in <listcomp>\n    self.child.to_representation(item) for item in iterable\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\audits.py\", line 31, in to_representation\n    ret[\"execute_db_name\"] = json.loads(instance.execute_db_name)\n  File \"C:\\python3.6\\lib\\json\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)\n');
INSERT INTO `monitor_errorlogs` VALUES (39, '2021-09-10 18:11:17.628462', '2021-09-10 18:11:17.628462', 'admin', 'Audits List', 'Expecting value: line 1 column 2 (char 1)', '192.168.1.55', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 43, in list\n    return self.get_paginated_response(serializer.data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 760, in data\n    ret = super().data\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 260, in data\n    self._data = self.to_representation(self.instance)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in to_representation\n    self.child.to_representation(item) for item in iterable\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in <listcomp>\n    self.child.to_representation(item) for item in iterable\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\audits.py\", line 31, in to_representation\n    ret[\"execute_db_name\"] = json.loads(instance.execute_db_name)\n  File \"C:\\python3.6\\lib\\json\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)\n');
INSERT INTO `monitor_errorlogs` VALUES (40, '2021-09-10 18:18:02.008563', '2021-09-10 18:18:02.008563', 'admin', 'Audits List', 'Expecting value: line 1 column 2 (char 1)', '192.168.1.55', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 43, in list\n    return self.get_paginated_response(serializer.data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 760, in data\n    ret = super().data\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 260, in data\n    self._data = self.to_representation(self.instance)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in to_representation\n    self.child.to_representation(item) for item in iterable\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in <listcomp>\n    self.child.to_representation(item) for item in iterable\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\audits.py\", line 31, in to_representation\n    ret[\"execute_db_name\"] = json.loads(instance.execute_db_name)\n  File \"C:\\python3.6\\lib\\json\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)\n');
INSERT INTO `monitor_errorlogs` VALUES (41, '2021-09-10 18:24:22.523245', '2021-09-10 18:24:22.523245', 'admin', 'Audits List', 'Expecting value: line 1 column 2 (char 1)', '192.168.1.8', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 43, in list\n    return self.get_paginated_response(serializer.data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 760, in data\n    ret = super().data\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 260, in data\n    self._data = self.to_representation(self.instance)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in to_representation\n    self.child.to_representation(item) for item in iterable\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 678, in <listcomp>\n    self.child.to_representation(item) for item in iterable\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\serializers\\audits.py\", line 31, in to_representation\n    ret[\"execute_db_name\"] = json.loads(instance.execute_db_name)\n  File \"C:\\python3.6\\lib\\json\\__init__.py\", line 354, in loads\n    return _default_decoder.decode(s)\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 339, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"C:\\python3.6\\lib\\json\\decoder.py\", line 357, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\njson.decoder.JSONDecodeError: Expecting value: line 1 column 2 (char 1)\n');
INSERT INTO `monitor_errorlogs` VALUES (42, '2021-09-12 18:27:55.029854', '2021-09-12 18:27:55.029854', 'yuan', 'Databases', '(1054, \"Unknown column \'sprint\' in \'field list\'\")', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.InternalError: (1054, \"Unknown column \'sprint\' in \'field list\'\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operates.py\", line 214, in post\n    OperateLogsView().create(data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operates.py\", line 264, in create\n    self.perform_create(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 24, in perform_create\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 212, in save\n    self.instance = self.create(validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 948, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 422, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 870, in _save_table\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 908, in _do_insert\n    using=using, raw=raw)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 1186, in _insert\n    return query.get_compiler(using=using).execute_sql(return_id)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1375, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.InternalError: (1054, \"Unknown column \'sprint\' in \'field list\'\")\n');
INSERT INTO `monitor_errorlogs` VALUES (43, '2021-09-12 18:28:37.089759', '2021-09-12 18:28:37.089759', 'yuan', 'Databases', '(1054, \"Unknown column \'sprint\' in \'field list\'\")', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.InternalError: (1054, \"Unknown column \'sprint\' in \'field list\'\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operates.py\", line 214, in post\n    OperateLogsView().create(data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operates.py\", line 264, in create\n    self.perform_create(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 24, in perform_create\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 212, in save\n    self.instance = self.create(validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 948, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 422, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 870, in _save_table\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 908, in _do_insert\n    using=using, raw=raw)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 1186, in _insert\n    return query.get_compiler(using=using).execute_sql(return_id)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1375, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.InternalError: (1054, \"Unknown column \'sprint\' in \'field list\'\")\n');
INSERT INTO `monitor_errorlogs` VALUES (44, '2021-09-12 18:29:47.032478', '2021-09-12 18:29:47.032478', 'yuan', 'Databases', '(1054, \"Unknown column \'sprint\' in \'field list\'\")', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.InternalError: (1054, \"Unknown column \'sprint\' in \'field list\'\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operates.py\", line 214, in post\n    OperateLogsView().create(data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operates.py\", line 264, in create\n    self.perform_create(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 24, in perform_create\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 212, in save\n    self.instance = self.create(validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 948, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 422, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 870, in _save_table\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 908, in _do_insert\n    using=using, raw=raw)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 1186, in _insert\n    return query.get_compiler(using=using).execute_sql(return_id)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1375, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.InternalError: (1054, \"Unknown column \'sprint\' in \'field list\'\")\n');
INSERT INTO `monitor_errorlogs` VALUES (45, '2021-09-12 18:31:17.524080', '2021-09-12 18:31:17.524080', 'yuan', 'Databases', '(1054, \"Unknown column \'sprint\' in \'field list\'\")', '127.0.0.1', 'Traceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.InternalError: (1054, \"Unknown column \'sprint\' in \'field list\'\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operates.py\", line 214, in post\n    OperateLogsView().create(data)\n  File \"D:\\work\\果果乐学\\code\\guozhi-efficiency-platform\\drf_admin\\apps\\dbms\\views\\operates.py\", line 264, in create\n    self.perform_create(serializer)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\mixins.py\", line 24, in perform_create\n    serializer.save()\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 212, in save\n    self.instance = self.create(validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\rest_framework\\serializers.py\", line 948, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 422, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 870, in _save_table\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\base.py\", line 908, in _do_insert\n    using=using, raw=raw)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\query.py\", line 1186, in _insert\n    return query.get_compiler(using=using).execute_sql(return_id)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1375, in execute_sql\n    cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"C:\\python3.6\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 170, in execute\n    result = self._query(query)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\cursors.py\", line 328, in _query\n    conn.query(q)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 893, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1103, in _read_query_result\n    result.read()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1396, in read\n    first_packet = self.connection._read_packet()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 1059, in _read_packet\n    packet.check_error()\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\connections.py\", line 384, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"C:\\python3.6\\lib\\site-packages\\pymysql\\err.py\", line 109, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.InternalError: (1054, \"Unknown column \'sprint\' in \'field list\'\")\n');
INSERT INTO `monitor_errorlogs` VALUES (46, '2021-10-29 13:55:36.302388', '2021-10-29 13:55:36.302420', 'admin', 'Db Server Config Generic', '(1062, \"Duplicate entry \'16\' for key \'PRIMARY\'\")', '192.168.1.201', 'Traceback (most recent call last):\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/mysql/base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/cursors.py\", line 148, in execute\n    result = self._query(query)\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/cursors.py\", line 310, in _query\n    conn.query(q)\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/connections.py\", line 548, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/connections.py\", line 775, in _read_query_result\n    result.read()\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/connections.py\", line 1156, in read\n    first_packet = self.connection._read_packet()\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/connections.py\", line 725, in _read_packet\n    packet.raise_for_error()\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/protocol.py\", line 221, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/err.py\", line 143, in raise_mysql_exception\n    raise errorclass(errno, errval)\npymysql.err.IntegrityError: (1062, \"Duplicate entry \'16\' for key \'PRIMARY\'\")\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/views.py\", line 502, in dispatch\n    response = handler(request, *args, **kwargs)\n  File \"/data/service/guozhi-ep/drf_admin/apps/dbms/views/db.py\", line 75, in post\n    self.perform_create(serializer)\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/mixins.py\", line 24, in perform_create\n    serializer.save()\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/serializers.py\", line 212, in save\n    self.instance = self.create(validated_data)\n  File \"/usr/local/lib/python3.6/site-packages/rest_framework/serializers.py\", line 948, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/query.py\", line 422, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/base.py\", line 741, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/base.py\", line 779, in save_base\n    force_update, using, update_fields,\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/base.py\", line 870, in _save_table\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/base.py\", line 908, in _do_insert\n    using=using, raw=raw)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/manager.py\", line 82, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/query.py\", line 1186, in _insert\n    return query.get_compiler(using=using).execute_sql(return_id)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/models/sql/compiler.py\", line 1375, in execute_sql\n    cursor.execute(sql, params)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/utils.py\", line 99, in execute\n    return super().execute(sql, params)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/utils.py\", line 67, in execute\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/utils.py\", line 76, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/utils.py\", line 89, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/utils.py\", line 84, in _execute\n    return self.cursor.execute(sql, params)\n  File \"/usr/local/lib/python3.6/site-packages/django/db/backends/mysql/base.py\", line 71, in execute\n    return self.cursor.execute(query, args)\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/cursors.py\", line 148, in execute\n    result = self._query(query)\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/cursors.py\", line 310, in _query\n    conn.query(q)\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/connections.py\", line 548, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/connections.py\", line 775, in _read_query_result\n    result.read()\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/connections.py\", line 1156, in read\n    first_packet = self.connection._read_packet()\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/connections.py\", line 725, in _read_packet\n    packet.raise_for_error()\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/protocol.py\", line 221, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"/usr/local/lib64/python3.6/site-packages/pymysql/err.py\", line 143, in raise_mysql_exception\n    raise errorclass(errno, errval)\ndjango.db.utils.IntegrityError: (1062, \"Duplicate entry \'16\' for key \'PRIMARY\'\")\n');

-- ----------------------------
-- Table structure for monitor_ipblacklist
-- ----------------------------
DROP TABLE IF EXISTS `monitor_ipblacklist`;
CREATE TABLE `monitor_ipblacklist`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `create_time` datetime(6) NULL DEFAULT NULL,
  `update_time` datetime(6) NULL DEFAULT NULL,
  `ip` char(39) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `ip`(`ip`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for monitor_onlineusers
-- ----------------------------
DROP TABLE IF EXISTS `monitor_onlineusers`;
CREATE TABLE `monitor_onlineusers`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `create_time` datetime(6) NULL DEFAULT NULL,
  `update_time` datetime(6) NULL DEFAULT NULL,
  `ip` char(39) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `monitor_onlineusers_user_id_248dbc65_fk_oauth_users_id`(`user_id`) USING BTREE,
  CONSTRAINT `monitor_onlineusers_user_id_248dbc65_fk_oauth_users_id` FOREIGN KEY (`user_id`) REFERENCES `oauth_users` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 24 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of monitor_onlineusers
-- ----------------------------
INSERT INTO `monitor_onlineusers` VALUES (13, '2021-09-12 13:42:32.989677', '2021-09-12 13:42:32.989677', '127.0.0.1', 1);
INSERT INTO `monitor_onlineusers` VALUES (15, '2021-09-22 14:53:41.518661', '2021-09-22 14:53:41.518695', '192.168.1.8', 1);
INSERT INTO `monitor_onlineusers` VALUES (16, '2021-09-22 19:14:25.659038', '2021-09-22 19:14:25.659073', '192.168.1.116', 1);
INSERT INTO `monitor_onlineusers` VALUES (17, '2021-09-22 19:18:41.039520', '2021-09-22 19:18:41.039565', '192.168.1.72', 1);
INSERT INTO `monitor_onlineusers` VALUES (18, '2021-09-22 19:41:18.492081', '2021-09-22 19:41:18.492114', '192.168.1.8', 4);
INSERT INTO `monitor_onlineusers` VALUES (19, '2021-09-22 19:52:01.681252', '2021-09-22 19:52:01.681285', '192.168.1.8', 5);
INSERT INTO `monitor_onlineusers` VALUES (20, '2021-09-23 16:16:15.730596', '2021-09-23 16:16:15.730629', '192.168.1.55', 4);
INSERT INTO `monitor_onlineusers` VALUES (21, '2021-10-09 18:53:14.372168', '2021-10-09 18:53:14.372207', '192.168.1.22', 5);
INSERT INTO `monitor_onlineusers` VALUES (22, '2021-10-20 10:21:57.970763', '2021-10-20 10:21:57.970795', '192.168.1.55', 6);
INSERT INTO `monitor_onlineusers` VALUES (23, '2021-10-29 13:53:56.664565', '2021-10-29 13:53:56.664597', '192.168.1.201', 1);

-- ----------------------------
-- Table structure for oauth_users
-- ----------------------------
DROP TABLE IF EXISTS `oauth_users`;
CREATE TABLE `oauth_users`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `last_login` datetime(6) NULL DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `first_name` varchar(30) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `last_name` varchar(150) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `email` varchar(254) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NULL DEFAULT NULL,
  `name` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `mobile` varchar(11) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `image` varchar(100) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `department_id` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `username`(`username`) USING BTREE,
  UNIQUE INDEX `mobile`(`mobile`) USING BTREE,
  INDEX `oauth_users_department_id_c38f9deb_fk_system_departments_id`(`department_id`) USING BTREE,
  CONSTRAINT `oauth_users_department_id_c38f9deb_fk_system_departments_id` FOREIGN KEY (`department_id`) REFERENCES `system_departments` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 7 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of oauth_users
-- ----------------------------
INSERT INTO `oauth_users` VALUES (1, 'pbkdf2_sha256$150000$RTCg1yt4vxyo$hheY9WeiViopkxgkdD2mj6h3Hn70EdyJK8LUy4RQxCk=', '2021-09-03 09:43:11.321113', 1, 'admin', '', '', '', 1, 1, '2021-03-06 06:18:25.737000', '', NULL, 'avatar/default.png', NULL);
INSERT INTO `oauth_users` VALUES (2, 'pbkdf2_sha256$150000$Uj2zlWSQDzCT$6EMKbcDm4HFNQf3tineM96iqBpGoh0v9IyniPpUF/I8=', NULL, 0, 'visitor', '', '', '', 0, 1, '2021-03-06 07:27:53.745000', '', NULL, 'avatar/default.png', NULL);
INSERT INTO `oauth_users` VALUES (4, 'pbkdf2_sha256$150000$fCez6Gq26RtV$BLWP84ceIFrWQCe1d6/hC7wq+1JDst975CpHwMZMSk8=', NULL, 0, 'guohaihan', '', '', '', 0, 1, '2021-09-22 19:39:10.189285', '郭海涵', NULL, 'avatar/default.png', 2);
INSERT INTO `oauth_users` VALUES (5, 'pbkdf2_sha256$150000$J0Prj8nefoDA$Em892yU5/RG3Rmu2XGg27Kc0q2uqEsxrDOGRDRfJ7vk=', NULL, 0, 'zhaojunlei', '', '', '', 0, 1, '2021-09-22 19:39:40.968447', '赵俊磊', NULL, 'avatar/default.png', 2);
INSERT INTO `oauth_users` VALUES (6, 'pbkdf2_sha256$150000$0CKH5CAHwtFB$Vn6Vz5WDOepbj51Fdmmm/ugXAgqU3RO9znw3zjh7Abg=', NULL, 0, 'guo', '', '', '', 0, 1, '2021-10-20 10:21:14.653931', '', NULL, 'avatar/default.png', NULL);

-- ----------------------------
-- Table structure for oauth_users_groups
-- ----------------------------
DROP TABLE IF EXISTS `oauth_users_groups`;
CREATE TABLE `oauth_users_groups`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `users_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `oauth_users_groups_users_id_group_id_a6d5dd23_uniq`(`users_id`, `group_id`) USING BTREE,
  INDEX `oauth_users_groups_group_id_234502cc_fk_auth_group_id`(`group_id`) USING BTREE,
  CONSTRAINT `oauth_users_groups_group_id_234502cc_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `oauth_users_groups_users_id_84419b9f_fk_oauth_users_id` FOREIGN KEY (`users_id`) REFERENCES `oauth_users` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for oauth_users_to_system_roles
-- ----------------------------
DROP TABLE IF EXISTS `oauth_users_to_system_roles`;
CREATE TABLE `oauth_users_to_system_roles`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `users_id` int(11) NOT NULL,
  `roles_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `oauth_users_to_system_roles_users_id_roles_id_f9870c0a_uniq`(`users_id`, `roles_id`) USING BTREE,
  INDEX `oauth_users_to_system_roles_roles_id_e553dfbf_fk_system_roles_id`(`roles_id`) USING BTREE,
  CONSTRAINT `oauth_users_to_system_roles_roles_id_e553dfbf_fk_system_roles_id` FOREIGN KEY (`roles_id`) REFERENCES `system_roles` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `oauth_users_to_system_roles_users_id_b4775819_fk_oauth_users_id` FOREIGN KEY (`users_id`) REFERENCES `oauth_users` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 7 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of oauth_users_to_system_roles
-- ----------------------------
INSERT INTO `oauth_users_to_system_roles` VALUES (1, 2, 2);
INSERT INTO `oauth_users_to_system_roles` VALUES (6, 4, 1);
INSERT INTO `oauth_users_to_system_roles` VALUES (5, 5, 3);

-- ----------------------------
-- Table structure for oauth_users_user_permissions
-- ----------------------------
DROP TABLE IF EXISTS `oauth_users_user_permissions`;
CREATE TABLE `oauth_users_user_permissions`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `users_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `oauth_users_user_permiss_users_id_permission_id_c70cd3b8_uniq`(`users_id`, `permission_id`) USING BTREE,
  INDEX `oauth_users_user_per_permission_id_74d25bb2_fk_auth_perm`(`permission_id`) USING BTREE,
  CONSTRAINT `oauth_users_user_per_permission_id_74d25bb2_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `oauth_users_user_permissions_users_id_bb814e73_fk_oauth_users_id` FOREIGN KEY (`users_id`) REFERENCES `oauth_users` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for system_departments
-- ----------------------------
DROP TABLE IF EXISTS `system_departments`;
CREATE TABLE `system_departments`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `create_time` datetime(6) NULL DEFAULT NULL,
  `update_time` datetime(6) NULL DEFAULT NULL,
  `name` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `pid_id` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `name`(`name`) USING BTREE,
  INDEX `system_departments_pid_id_a20fc5d4_fk_system_departments_id`(`pid_id`) USING BTREE,
  CONSTRAINT `system_departments_pid_id_a20fc5d4_fk_system_departments_id` FOREIGN KEY (`pid_id`) REFERENCES `system_departments` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of system_departments
-- ----------------------------
INSERT INTO `system_departments` VALUES (1, '2021-05-08 07:43:52.593731', '2021-05-08 07:43:52.593731', '果果科技', NULL);
INSERT INTO `system_departments` VALUES (2, '2021-05-08 07:44:00.944864', '2021-05-08 07:44:00.944864', '研发', 1);

-- ----------------------------
-- Table structure for system_permissions
-- ----------------------------
DROP TABLE IF EXISTS `system_permissions`;
CREATE TABLE `system_permissions`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `create_time` datetime(6) NULL DEFAULT NULL,
  `update_time` datetime(6) NULL DEFAULT NULL,
  `name` varchar(30) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `sign` varchar(30) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `menu` tinyint(1) NOT NULL,
  `method` varchar(8) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `path` varchar(200) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `desc` varchar(30) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `pid_id` int(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `sign`(`sign`) USING BTREE,
  INDEX `system_permissions_pid_id_d89bbee4_fk_system_permissions_id`(`pid_id`) USING BTREE,
  CONSTRAINT `system_permissions_pid_id_d89bbee4_fk_system_permissions_id` FOREIGN KEY (`pid_id`) REFERENCES `system_permissions` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 58 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of system_permissions
-- ----------------------------
INSERT INTO `system_permissions` VALUES (1, '2021-03-06 06:27:00.946000', '2021-03-06 06:27:00.946000', '系统管理', 'system', 1, '', '', '', NULL);
INSERT INTO `system_permissions` VALUES (2, '2021-03-06 06:28:04.500000', '2021-03-06 06:28:04.500000', '用户管理', 'system-users', 1, '', '', '', 1);
INSERT INTO `system_permissions` VALUES (3, '2021-03-06 06:28:40.627000', '2021-03-06 06:28:40.627000', '角色管理', 'system-roles', 1, '', '', '', 1);
INSERT INTO `system_permissions` VALUES (4, '2021-03-06 06:28:54.786000', '2021-03-06 06:28:54.787000', '权限管理', 'system-permissions', 1, '', '', '', 1);
INSERT INTO `system_permissions` VALUES (5, '2021-03-06 06:29:27.205000', '2021-03-06 06:29:27.205000', '部门管理', 'system-departments', 1, '', '', '', 1);
INSERT INTO `system_permissions` VALUES (6, '2021-03-06 06:29:44.315000', '2021-03-06 06:29:44.315000', '任务调度', 'system-jobs', 1, '', '', '', 1);
INSERT INTO `system_permissions` VALUES (7, '2021-03-06 06:31:03.742000', '2021-03-06 06:31:03.742000', '系统监控', 'monitor', 1, '', '', '', NULL);
INSERT INTO `system_permissions` VALUES (8, '2021-03-06 06:31:42.411000', '2021-03-06 06:31:42.411000', '在线用户', 'monitor-users', 1, '', '', '', 7);
INSERT INTO `system_permissions` VALUES (9, '2021-03-06 06:32:03.386000', '2021-03-06 07:14:44.908000', 'IP黑名单', 'monitor-ip', 1, '', '', '', 7);
INSERT INTO `system_permissions` VALUES (10, '2021-03-06 06:32:20.665000', '2021-03-06 07:25:48.418000', '错误日志', 'monitor-error', 1, '', '', '', 7);
INSERT INTO `system_permissions` VALUES (11, '2021-03-06 06:32:47.845000', '2021-03-06 06:32:47.845000', '服务监控', 'monitor-service', 1, '', '', '', 7);
INSERT INTO `system_permissions` VALUES (12, '2021-03-06 06:33:33.316000', '2021-03-06 06:33:33.316000', '用户新增', 'system-users-add', 0, 'POST', '/system/users/', '', 2);
INSERT INTO `system_permissions` VALUES (13, '2021-03-06 06:34:22.428000', '2021-03-06 06:35:48.344000', '用户删除', 'system-users-del', 0, 'DELETE', '/system/users/\\d+/', '', 2);
INSERT INTO `system_permissions` VALUES (14, '2021-03-06 06:35:40.757000', '2021-03-06 06:35:40.757000', '用户批量删除', 'system-users-mdel', 0, 'DELETE', '/system/users/', '', 2);
INSERT INTO `system_permissions` VALUES (15, '2021-03-06 06:36:25.503000', '2021-03-06 06:36:25.503000', '用户编辑', 'system-users-update', 0, 'PUT', '/system/users/\\d+/', '', 2);
INSERT INTO `system_permissions` VALUES (16, '2021-03-06 06:37:51.164000', '2021-03-06 06:37:51.164000', '重置密码', 'system-users-reset-pwd', 0, 'PATCH', '/system/users/reset-password/\\d+/', '', 2);
INSERT INTO `system_permissions` VALUES (17, '2021-03-06 06:42:10.765000', '2021-03-06 06:46:36.819000', '用户权限', 'system-users-permissions', 0, 'GET', '/system/users/\\d+/permissions/', '', 2);
INSERT INTO `system_permissions` VALUES (18, '2021-03-06 06:44:06.920000', '2021-03-06 06:44:06.920000', '角色新增', 'system-roles-add', 0, 'POST', '/system/roles/', '', 3);
INSERT INTO `system_permissions` VALUES (19, '2021-03-06 06:44:58.943000', '2021-03-06 06:45:07.003000', '角色删除', 'system-roles-del', 0, 'DELETE', '/system/roles/\\d+/', '', 3);
INSERT INTO `system_permissions` VALUES (20, '2021-03-06 06:45:38.423000', '2021-03-06 06:45:38.423000', '角色批量删除', 'system-roles-mdel', 0, 'DELETE', '/system/roles/', '', 3);
INSERT INTO `system_permissions` VALUES (21, '2021-03-06 06:46:21.147000', '2021-03-06 06:46:21.147000', '角色编辑', 'system-roles-update', 0, 'PUT', '/system/roles/\\d+/', '', 3);
INSERT INTO `system_permissions` VALUES (22, '2021-03-06 06:47:39.724000', '2021-03-06 07:48:25.491000', '角色授权', 'system-roles-auth', 0, 'PATCH', '/system/roles/\\d+/', '', 3);
INSERT INTO `system_permissions` VALUES (23, '2021-03-06 06:48:45.004000', '2021-03-06 06:48:45.004000', '权限新增', 'system-permissions-add', 0, 'POST', '/system/permissions/', '', 4);
INSERT INTO `system_permissions` VALUES (24, '2021-03-06 06:49:18.322000', '2021-03-06 06:49:18.322000', '权限删除', 'system-permissions-del', 0, 'DELETE', '/system/permissions/\\d+/', '', 4);
INSERT INTO `system_permissions` VALUES (25, '2021-03-06 06:49:46.723000', '2021-03-06 06:49:46.723000', '权限批量删除', 'system-permissions-mdel', 0, 'DELETE', '/system/permissions/', '', 4);
INSERT INTO `system_permissions` VALUES (26, '2021-03-06 06:50:22.647000', '2021-03-06 06:50:22.647000', '权限编辑', 'system-permissions-update', 0, 'PUT', '/system/permissions/\\d+/', '', 4);
INSERT INTO `system_permissions` VALUES (27, '2021-03-06 06:51:43.577000', '2021-03-06 06:51:43.577000', '部门新增', 'system-departments-add', 0, 'POST', '/system/departments/', '', 5);
INSERT INTO `system_permissions` VALUES (28, '2021-03-06 06:52:14.205000', '2021-03-06 06:52:14.205000', '部门删除', 'system-departments-del', 0, 'DELETE', '/system/departments/\\d+/', '', 5);
INSERT INTO `system_permissions` VALUES (29, '2021-03-06 06:52:52.305000', '2021-03-06 06:52:52.305000', '部门批量删除', 'system-departments-mdel', 0, 'DELETE', '/system/departments/', '', 5);
INSERT INTO `system_permissions` VALUES (30, '2021-03-06 06:54:01.223000', '2021-03-06 06:54:01.223000', '部门编辑', 'system-departments-update', 0, 'PUT', '/system/departments/\\d+/', '', 5);
INSERT INTO `system_permissions` VALUES (31, '2021-03-06 07:01:44.692000', '2021-03-06 07:01:44.692000', '任务新增', 'system-jobs-add', 0, 'POST', '/system/jobs/', '', 6);
INSERT INTO `system_permissions` VALUES (32, '2021-03-06 07:02:08.425000', '2021-03-06 07:02:08.425000', '任务删除', 'system-jobs-del', 0, 'DELETE', '/system/jobs/\\d+/', '', 6);
INSERT INTO `system_permissions` VALUES (33, '2021-03-06 07:02:47.212000', '2021-03-06 07:02:47.212000', '清除任务', 'system-jobs-clear', 0, 'DELETE', '/system/jobs/', '', 6);
INSERT INTO `system_permissions` VALUES (34, '2021-03-06 07:04:16.479000', '2021-03-06 07:04:16.479000', '任务暂停/启动', 'system-jobs-ps', 0, 'PATCH', '/system/jobs/\\d+/', '', 6);
INSERT INTO `system_permissions` VALUES (35, '2021-03-06 07:06:25.884000', '2021-03-06 07:06:25.884000', '执行记录', 'system-jobs-history', 0, 'GET', '/system/jobs/executions/', '', 6);
INSERT INTO `system_permissions` VALUES (36, '2021-03-06 07:08:17.391000', '2021-03-06 07:08:17.391000', '用户锁定', 'monitor-users-lock', 0, 'PATCH', '/system/users/\\d+/', '', 8);
INSERT INTO `system_permissions` VALUES (37, '2021-03-06 07:09:42.701000', '2021-03-06 07:09:42.701000', '用户锁定/激活', 'system-users-lock', 0, 'PATCH', '/system/users/\\d+/', '', 2);
INSERT INTO `system_permissions` VALUES (38, '2021-03-06 07:12:10.324000', '2021-03-06 07:12:10.324000', '拉黑IP', 'monitor-users-black-ip', 0, 'POST', '/monitor/ip/', '', 8);
INSERT INTO `system_permissions` VALUES (39, '2021-03-06 07:14:02.473000', '2021-03-06 07:14:51.685000', 'IP黑名单新增', 'monitor-ip-add', 0, 'POST', '/monitor/ip/', '', 9);
INSERT INTO `system_permissions` VALUES (40, '2021-03-06 07:15:25.282000', '2021-03-06 07:15:25.282000', 'IP黑名单删除', 'monitor-ip-del', 0, 'DELETE', '/monitor/ip/\\d+/', '', 9);
INSERT INTO `system_permissions` VALUES (41, '2021-03-06 07:15:51.996000', '2021-03-06 07:15:51.996000', 'IP黑名单批量删除', 'monitor-ip-mdel', 0, 'DELETE', '/monitor/ip/', '', 9);
INSERT INTO `system_permissions` VALUES (42, '2021-03-06 07:17:01.997000', '2021-03-06 07:17:01.997000', 'IP黑名单编辑', 'monitor-ip-update', 0, 'PUT', '/monitor/ip/\\d+/', '', 9);
INSERT INTO `system_permissions` VALUES (43, '2021-03-06 07:18:09.169000', '2021-03-06 07:18:09.169000', '清空日志', 'monitor-error-clear', 0, 'DELETE', '/monitor/error/', '', 10);
INSERT INTO `system_permissions` VALUES (44, '2021-03-06 07:28:39.772000', '2021-03-06 07:28:39.772000', '资产管理', 'cmdb', 1, '', '', '', NULL);
INSERT INTO `system_permissions` VALUES (45, '2021-03-06 07:29:28.047000', '2021-03-06 07:29:28.047000', '服务器', 'cmdb-servers', 1, '', '', '', 44);
INSERT INTO `system_permissions` VALUES (46, '2021-03-06 07:30:51.763000', '2021-03-06 07:30:51.763000', '系统工具', 'tool', 1, '', '', '', NULL);
INSERT INTO `system_permissions` VALUES (47, '2021-03-06 07:31:13.385000', '2021-03-06 07:31:13.385000', 'swagger', 'tool-swagger', 1, '', '', '', 46);
INSERT INTO `system_permissions` VALUES (48, '2021-03-06 07:34:31.177000', '2021-03-06 07:34:31.177000', '服务器新增', 'cmdb-servers-add', 0, 'POST', '/cmdb/servers/', '', 45);
INSERT INTO `system_permissions` VALUES (49, '2021-03-06 07:35:00.176000', '2021-03-06 07:35:00.176000', '服务器删除', 'cmdb-servers-del', 0, 'DELETE', '/cmdb/servers/\\d+/', '', 45);
INSERT INTO `system_permissions` VALUES (50, '2021-03-06 07:35:22.617000', '2021-03-06 07:35:22.617000', '服务器批量删除', 'cmdb-servers-mdel', 0, 'DELETE', '/cmdb/servers/', '', 45);
INSERT INTO `system_permissions` VALUES (51, '2021-03-06 07:36:04.613000', '2021-03-06 07:36:04.613000', '服务器编辑', 'cmdb-servers-update', 0, 'PUT', '/cmdb/servers/\\d+/', '', 45);
INSERT INTO `system_permissions` VALUES (52, '2021-09-03 09:45:24.187777', '2021-09-03 09:47:38.119690', '数据库', 'dbms', 1, '', '', '', NULL);
INSERT INTO `system_permissions` VALUES (53, '2021-09-03 09:46:38.496327', '2021-09-03 09:50:04.449156', '数据库管理', 'dbms-manage', 1, '', '', '', 52);
INSERT INTO `system_permissions` VALUES (54, '2021-09-03 09:47:14.947357', '2021-09-03 09:50:08.290476', '数据库执行', 'dbms-execute', 1, '', '', '', 52);
INSERT INTO `system_permissions` VALUES (55, '2021-09-03 09:57:17.708752', '2021-09-03 09:57:17.708752', '执行', 'dbms-execute-sql', 0, 'POST', '/dbms/operates/databases/\\d+/', '', 54);
INSERT INTO `system_permissions` VALUES (56, '2021-09-22 19:45:58.195207', '2021-09-22 19:45:58.195265', 'sql日志', 'dbms-logs', 1, '', '', '', 52);
INSERT INTO `system_permissions` VALUES (57, '2021-09-22 19:46:41.162035', '2021-09-22 19:46:41.162072', 'sql审核', 'dbms-audits', 1, '', '', '', 52);

-- ----------------------------
-- Table structure for system_roles
-- ----------------------------
DROP TABLE IF EXISTS `system_roles`;
CREATE TABLE `system_roles`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `create_time` datetime(6) NULL DEFAULT NULL,
  `update_time` datetime(6) NULL DEFAULT NULL,
  `name` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `desc` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `name`(`name`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of system_roles
-- ----------------------------
INSERT INTO `system_roles` VALUES (1, '2021-03-06 06:43:07.733000', '2021-03-06 06:43:07.733000', 'admin', '系统管理员');
INSERT INTO `system_roles` VALUES (2, '2021-03-06 07:27:29.128000', '2021-09-12 17:41:40.996373', 'visitor', '测试角色');
INSERT INTO `system_roles` VALUES (3, '2021-09-22 19:37:54.428426', '2021-09-22 19:47:06.420415', 'qa', '测试组');

-- ----------------------------
-- Table structure for system_roles_to_system_permissions
-- ----------------------------
DROP TABLE IF EXISTS `system_roles_to_system_permissions`;
CREATE TABLE `system_roles_to_system_permissions`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `roles_id` int(11) NOT NULL,
  `permissions_id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `system_roles_to_system_p_roles_id_permissions_id_cc02d6be_uniq`(`roles_id`, `permissions_id`) USING BTREE,
  INDEX `system_roles_to_syst_permissions_id_6b98c1d9_fk_system_pe`(`permissions_id`) USING BTREE,
  CONSTRAINT `system_roles_to_syst_permissions_id_6b98c1d9_fk_system_pe` FOREIGN KEY (`permissions_id`) REFERENCES `system_permissions` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `system_roles_to_syst_roles_id_ff9d45cd_fk_system_ro` FOREIGN KEY (`roles_id`) REFERENCES `system_roles` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 26 CHARACTER SET = utf8 COLLATE = utf8_bin ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of system_roles_to_system_permissions
-- ----------------------------
INSERT INTO `system_roles_to_system_permissions` VALUES (1, 2, 1);
INSERT INTO `system_roles_to_system_permissions` VALUES (2, 2, 2);
INSERT INTO `system_roles_to_system_permissions` VALUES (3, 2, 3);
INSERT INTO `system_roles_to_system_permissions` VALUES (4, 2, 4);
INSERT INTO `system_roles_to_system_permissions` VALUES (5, 2, 5);
INSERT INTO `system_roles_to_system_permissions` VALUES (6, 2, 6);
INSERT INTO `system_roles_to_system_permissions` VALUES (7, 2, 7);
INSERT INTO `system_roles_to_system_permissions` VALUES (8, 2, 8);
INSERT INTO `system_roles_to_system_permissions` VALUES (9, 2, 9);
INSERT INTO `system_roles_to_system_permissions` VALUES (10, 2, 10);
INSERT INTO `system_roles_to_system_permissions` VALUES (11, 2, 11);
INSERT INTO `system_roles_to_system_permissions` VALUES (12, 2, 44);
INSERT INTO `system_roles_to_system_permissions` VALUES (13, 2, 45);
INSERT INTO `system_roles_to_system_permissions` VALUES (14, 2, 46);
INSERT INTO `system_roles_to_system_permissions` VALUES (15, 2, 47);
INSERT INTO `system_roles_to_system_permissions` VALUES (16, 2, 52);
INSERT INTO `system_roles_to_system_permissions` VALUES (17, 2, 53);
INSERT INTO `system_roles_to_system_permissions` VALUES (18, 2, 54);
INSERT INTO `system_roles_to_system_permissions` VALUES (20, 2, 55);
INSERT INTO `system_roles_to_system_permissions` VALUES (21, 3, 52);
INSERT INTO `system_roles_to_system_permissions` VALUES (22, 3, 54);
INSERT INTO `system_roles_to_system_permissions` VALUES (23, 3, 55);
INSERT INTO `system_roles_to_system_permissions` VALUES (25, 3, 56);

SET FOREIGN_KEY_CHECKS = 1;
